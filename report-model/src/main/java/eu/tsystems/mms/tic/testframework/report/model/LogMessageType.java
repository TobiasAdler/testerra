// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: framework.proto

package eu.tsystems.mms.tic.testframework.report.model;

/**
 * Protobuf enum {@code data.LogMessageType}
 */
public enum LogMessageType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>LMT_OFF = 0;</code>
   */
  LMT_OFF(0),
  /**
   * <code>LMT_ERROR = 1;</code>
   */
  LMT_ERROR(1),
  /**
   * <code>LMT_WARN = 2;</code>
   */
  LMT_WARN(2),
  /**
   * <code>LMT_INFO = 3;</code>
   */
  LMT_INFO(3),
  /**
   * <code>LMT_DEBUG = 4;</code>
   */
  LMT_DEBUG(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>LMT_OFF = 0;</code>
   */
  public static final int LMT_OFF_VALUE = 0;
  /**
   * <code>LMT_ERROR = 1;</code>
   */
  public static final int LMT_ERROR_VALUE = 1;
  /**
   * <code>LMT_WARN = 2;</code>
   */
  public static final int LMT_WARN_VALUE = 2;
  /**
   * <code>LMT_INFO = 3;</code>
   */
  public static final int LMT_INFO_VALUE = 3;
  /**
   * <code>LMT_DEBUG = 4;</code>
   */
  public static final int LMT_DEBUG_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static LogMessageType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static LogMessageType forNumber(int value) {
    switch (value) {
      case 0: return LMT_OFF;
      case 1: return LMT_ERROR;
      case 2: return LMT_WARN;
      case 3: return LMT_INFO;
      case 4: return LMT_DEBUG;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<LogMessageType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      LogMessageType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<LogMessageType>() {
          public LogMessageType findValueByNumber(int number) {
            return LogMessageType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return eu.tsystems.mms.tic.testframework.report.model.Framework.getDescriptor().getEnumTypes().get(1);
  }

  private static final LogMessageType[] VALUES = values();

  public static LogMessageType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private LogMessageType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:data.LogMessageType)
}

